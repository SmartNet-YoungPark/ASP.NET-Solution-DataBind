@model CRUD_OperationsInMVC.Models.Member
@{
    ViewBag.Title = "Delete";
}

<h2>Delete Member</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
     
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new
                {
                    htmlAttributes =
                new { @class = "form-control", disabled = "disabled", @readonly = "readonly" }
                })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new
                {
                    htmlAttributes =
                new { @class = "form-control", disabled = "disabled", @readonly = "readonly" }
                })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new
                {
                    htmlAttributes =
                new { @class = "form-control", disabled = "disabled", @readonly = "readonly" }
                })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new
                {
                    htmlAttributes =
                new { @class = "form-control", disabled = "disabled", @readonly = "readonly" }
                })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new
                {
                    htmlAttributes =
                new { @class = "form-control", disabled = "disabled", @readonly = "readonly" }
                })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Delete" class="btn btn-default" />
            </div>
        </div>
    </div>
    <b> Call Controller : </b>
    <pre>
       [HttpGet]
        public ActionResult Delete(int id)
        {
            MemberBusinessLayer memberBusinessLayer = new MemberBusinessLayer();
            Member member = memberBusinessLayer.GetAllMembers().FirstOrDefault(emp => emp.ID == id);
            return View(member);
        }
        [HttpPost]
        public ActionResult Delete(Member member)
        {
            if (ModelState.IsValid)
            {

                MemberBusinessLayer memberBusinessLayer = new MemberBusinessLayer();
                memberBusinessLayer.DeleteMember(member);
                return RedirectToAction("/Index");
            }

                return View(member);
            }
     </pre>
    <b> Business logic : </b>
    <pre>
        public void DeleteMember(Member member)
        {
            string connectionString = ConfigurationManager.ConnectionStrings["DBCS"].ConnectionString;
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                SqlCommand cmd = new SqlCommand("spDeleteMember", con);
                cmd.CommandType = CommandType.StoredProcedure;

                SqlParameter paramId = new SqlParameter();
                paramId.ParameterName = "&#64Id";
                paramId.Value = member.ID;
                cmd.Parameters.Add(paramId);

                con.Open();
                cmd.ExecuteNonQuery();
            }
        }
    </pre>
    <b> Stored Procedure : </b>
    <pre>
    ALTER Procedure [dbo].[spDeleteMember]
    &#64Id int
    as
    Begin
    Delete from Member where Id = &#64Id
    End
    </pre>
 }
        <div>
            @Html.ActionLink("Back to List", "/Index", "BusinessObject")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }


       